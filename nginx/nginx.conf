# Basic Nginx Configuration for ISLE

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Rate limiting to prevent abuse (optional, but good practice)
    # limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    upstream api_server {
        server api:8000; # 'api' is the service name in docker-compose
    }

    upstream frontend_server {
        server site:3000; # 'site' is the service name in docker-compose
    }

    upstream ml_websocket_server {
        server ml:15100;  # 'ml' is the service name in docker-compose
    }

    server {
        listen 80;
        server_name localhost; # Or your domain

        # Proxy API requests
        location /api/ {
            # limit_req zone=mylimit burst=20 nodelay; # Apply rate limit
            proxy_pass http://api_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # Required for websockets if API ever uses them
            proxy_set_header Connection "upgrade";    # Required for websockets if API ever uses them
            proxy_set_header X-Forwarded-Prefix /api;  # Add this line
            proxy_redirect off;  # Add this line to prevent redirect rewriting
        }

        # Proxy WebSocket ML requests
        location /ml/ {
            # limit_req zone=mylimit burst=100 nodelay; # Higher burst for WS
            proxy_pass http://ml_websocket_server/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s; # Keep connection open for long-lived WebSockets
            proxy_send_timeout 86400s;
        }

        # Serve frontend application (Next.js)
        location / {
            proxy_pass http://frontend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # The following two lines are required for Next.js SSR/Dev server HMR through proxy
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; 
            proxy_set_header Connection "upgrade";
        }

        # Optional: Add error pages, SSL configuration, etc.
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html; # Default Nginx error page location
        }
    }
} 