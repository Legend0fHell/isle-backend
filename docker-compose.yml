services:
  db:
    image: postgres:17-bookworm
    environment:
      POSTGRES_USER: isle_user
      POSTGRES_PASSWORD: isle_password
      POSTGRES_DB: asl_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - isle-network
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - ./api/.env.example
    # Override CMD from Dockerfile for development with reload
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    # Uncomment volumes below for development hot-reloading
    # volumes:
    #   - ./api:/api_app
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - isle-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ml:
    build:
      context: ./ml
      dockerfile: Dockerfile
    env_file:
      - ./ml/.env.example
    # command: python main.py  # Will use CMD from Dockerfile
    volumes:
      - ./ml:/app # For model updates without rebuilding
    expose:
      - "15100"
    networks:
      - isle-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "python", "-c", "import requests; requests.get('http://localhost:15100/health')" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  site:
    build:
      context: ./site
      dockerfile: Dockerfile
    env_file:
      - ./site/.env.example
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    volumes:
      - ./site:/app
      - /app/node_modules # Anonymous volume to prevent node_modules override
      - /app/.next # Anonymous volume for Next.js build cache
    networks:
      - isle-network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
      site:
        condition: service_started
      ml:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - isle-network
    restart: unless-stopped

volumes:
  pgdata:


networks:
  isle-network:
    driver: bridge
